#Estilos

BOLD='\e[1m'
RESET='\e[0m'

#Cores RGB

ROXO='\e[38;2;128;0;128m'
VERDE='\e[38;2;0;255;100m'
AMARELO='\e[38;2;255;215;0m'
VERMELHO='\e[38;2;220;20;60m'
CIANO='\e[38;2;0;255;255m'
BRANCO='\e[97m'

#=== MENU PRINCIPAL ===

while true; do

#Caminho onde ser√° salvo o √∫ltimo diret√≥rio digitado

LAST_DIR_FILE="$HOME/.gitpush_dir"

#Verifica se j√° existe um diret√≥rio salvo

if [ -f "$LAST_DIR_FILE" ]; then
dir=$(cat "$LAST_DIR_FILE")
else
read -rp "Digite o caminho do projeto (primeira vez): " dir
echo "$dir" > "$LAST_DIR_FILE"
fi

#Verifica se o diret√≥rio ainda existe

if [ ! -d "$dir" ]; then
echo -e "${VERMELHO}‚ùå Diret√≥rio salvo n√£o existe ou foi removido:${RESET} $dir"                                                                                                 read -rp "Digite um novo caminho v√°lido: " dir
echo "$dir" > "$LAST_DIR_FILE"
fi

#Tenta acessar o diret√≥rio

cd "$dir" || {
echo -e "${VERMELHO}‚ùå N√£o foi poss√≠vel acessar:${RESET} $dir"
sleep 1
continue
}

#Marcar o diret√≥rio como seguro pro Git

git config --global --add safe.directory "$dir" 2>/dev/null
echo -e "$(cat <<EOF
${BOLD}${ROXO}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
${BOLD}${CIANO}üìÇ Diret√≥rio atual: $dir
üîó Reposit√≥rio remoto atual: $(git remote get-url origin 2>/dev/null || echo 'Nenhum remoto configurado')
üë§ Usu√°rio git global: $(git config --global user.name || echo 'N√£o configurado')
üìß Email git global: $(git config --global user.email || echo 'N√£o configurado')
${BOLD}${ROXO}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                           ${BRANCO}-> GIT PUSH <-${ROXO}                            ‚ïë
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë ${BRANCO}[1] S√≥ fazer push no reposit√≥rio atual                              ${ROXO}‚ïë
${ROXO}‚ïë ${BRANCO}[2] Mudar URL do reposit√≥rio atual                                  ${ROXO}‚ïë
${ROXO}‚ïë ${BRANCO}[3] Mudar usu√°rio git (nome e email globais)                        ${ROXO}‚ïë
${ROXO}‚ïë ${BRANCO}[4] Fazer commit e push (padr√£o)                                    ${ROXO}‚ïë
${ROXO}‚ïë ${BRANCO}[5] Mudar diret√≥rio do projeto                                      ${ROXO}‚ïë
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë ${BRANCO}[0] Sair do Menu                                                    ${ROXO}‚ïë
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${RESET}
EOF
)"
read -rp $'\e[1;38;2;128;0;128m‚îî‚îÄ‚îÄ>> \e[0m' opcao

#=== OP√á√ïES DO MENU ===

case $opcao in
1)

#Pega a branch atual

branch=$(git branch --show-current)

echo -e "${CIANO}Fazendo push na branch '${ROXO}$branch${CIANO}'...${RESET}"
git push -u origin "$branch"
;;
2)
if [ ! -d ".git" ]; then
echo -e "${VERDE}‚ùå Esse diret√≥rio n√£o √© um reposit√≥rio Git.${RESET}"
read -rp "Deseja inicializar com 'git init'? (s/n): " resp
if [[ "$resp" =~ ^[sS]$ ]]; then
git init
echo -e "${VERDE}‚úÖ Reposit√≥rio Git inicializado.${RESET}"
else
echo -e "${VERMELHO}‚ùå Opera√ß√£o cancelada.${RESET}"
sleep 5
return
fi
fi

read -rp "Digite a nova URL do reposit√≥rio remoto: " nova_url

if git remote | grep -q origin; then
git remote set-url origin "$nova_url"
echo -e "${CIANO}üîÑ URL do remoto 'origin' atualizada.${RESET}"
else
git remote add origin "$nova_url"
echo -e "${VERDE}‚úÖ Remoto 'origin' adicionado.${RESET}"
fi
;;
3)
read -rp "Novo nome de usu√°rio global: " novo_nome
read -rp "Novo e-mail global: " novo_email
git config --global user.name "$novo_nome"
git config --global user.email "$novo_email"
echo "Usu√°rio git global atualizado."
;;
4)

#Garantir nome e e-mail configurados

if ! git config --global user.name > /dev/null; then
read -rp "Digite seu nome para git config global: " nome
git config --global user.name "$nome"
fi
if ! git config --global user.email > /dev/null; then
read -rp "Digite seu email para git config global: " email
git config --global user.email "$email"
fi

#Configurar remoto se n√£o tiver

if ! git remote | grep -q origin; then
read -rp "üîó Digite a URL do reposit√≥rio remoto: " repo_url
git remote add origin "$repo_url"
fi

# Sele√ß√£o do tipo de commit
  echo "Escolha o tipo de commit:"
  echo "1) Feat      ‚Äì Nova funcionalidade"
  echo "2) Fix       ‚Äì Corre√ß√£o de bug"
  echo "3) Update    ‚Äì Ajustes pequenos"
  echo "4) Refactor  ‚Äì Refatora√ß√£o de c√≥digo"
  echo "5) Style     ‚Äì Mudan√ßa visual"
  echo "6) Remove    ‚Äì Remo√ß√µes"
  echo "7) Add       ‚Äì Adi√ß√£o de arquivos ou recursos"
  echo "8) Docs      ‚Äì Documenta√ß√£o"
  echo "9) Chore     ‚Äì Tarefas t√©cnicas"
  read -rp "Tipo: " tipo_num
  case $tipo_num in
    1) tipo="Feat" ;;
    2) tipo="Fix" ;;
    3) tipo="Update" ;;
    4) tipo="Refactor" ;;
    5) tipo="Style" ;;
    6) tipo="Remove" ;;
    7) tipo="Add" ;;
    8) tipo="Docs" ;;
    9) tipo="Chore" ;;
    *) echo -e "${VERMELHO}‚ùå Tipo inv√°lido. Cancelando.${RESET}"; sleep 1; continue ;;
  esac

  read -rp "√Årea afetada (ex: Jogador, Menu): " area
  read -rp "Descri√ß√£o do commit: " descricao
  msg="[$tipo] $area: $descricao"

  # Adicionar arquivos
  git add .

  # Verifica se h√° algo para commitar
  if git diff --cached --quiet; then
    echo -e "${AMARELO}‚ö†Ô∏è Nenhuma mudan√ßa detectada para commit.${RESET}"
    sleep 1
    continue
  fi

  # Faz o commit e push
  git commit -m "$msg"
  branch=$(git branch --show-current)
  git push -u origin "$branch"
  ;;
5)
  read -rp "Digite o novo diret√≥rio do projeto: " novo_dir
  cd "$novo_dir" || { echo -e "${VERMELHO}‚ùå Diret√≥rio inv√°lido.${RESET}"; }
  echo "$novo_dir" > "$LAST_DIR_FILE"
  echo -e "${VERDE}‚úÖ Diret√≥rio atualizado e salvo.${RESET}"
  sleep 0.5
  ;;
0)
  echo -e "${VERMELHO}Saindo do menu...${RESET}"
  break
  ;;
*)
  echo -e "${VERMELHO}‚ùå Op√ß√£o inv√°lida.${RESET}"
  sleep 0.5
  ;;

esac
clear
done


